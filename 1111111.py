class Card:                 #Создание класса "Карты"
    suits=["пикей","червей","бубей","треф"] #Создание переменной,включающей в себя список мастей.
    values=["None","None","2","3","4","5","6","7","8","9","10","валета","даму","короля","туза"] #Создание переменной, включающей в себя номиналы карт.
    def __init__(self,v,s):#Инициализация объектов класса "Карты", включающие в себя 2 параметра
        self.value=v #Инициализация первого параметра объектов класса "Карты"
        self.suit=s#Инициализация второго параметра объектов класса "Карты"
    def __lt__(self, other): #Инициализация "волшебного" метода в классе "Карты", позволяющего сравнивать объекты в классе, по какому-либо параметру
        if self.value < other.value: #Вызов метода (условия), осуществляющего выполнение определенного действия, при выполнении условия, содержащегося в теле метода и объявление параметра объекта
                                    #класса по которому осуществляет сравнение метод "__lt__"
            return True #Действие, выполняемое при соответствии условия, содержащегося в теле метода???
        if self.value == other.value: #Вызов метода, осуществляющего выполнение определенного действия, при выполнении условия, содержащегося в теле метода
            if self.suit < other.suit: #Объявление параметра объекта по которому осуществляется вторичное сравнение объектов класса, при равенстве первичных параметров
                return True #Действие, выполняемое при соответствии условия, содержащегося в теле метода???
            else: #Вызов подметода, выполняющего определенные действия, при невыполнении условия, содержащегося в теле метода.
                return False #Действие, выполняемое при соответствии условия, содержащегося в теле подметода
        return False
   
    def __repr__ (self): #Инициализация "волшебного" метода в классе "Карты", позволяющего выводить строку, содержащую значения, записанных в память параметров объекта класса
        return self.values[self.value]+" "+self.suits[self.suit]
print(Card(14,0))
